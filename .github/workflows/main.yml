name: Sync FTP to GitHub

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  ftp-sync:
    name: Sync FTP to GitHub
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        ref: dev  # Ensure we are checking out the dev branch

    - name: Set up Git
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Action"

    - name: Generate Branch Name
      id: generate_branch
      run: |
        # Generate branch name in the format sigtax.com_dd_mm_yyyy_hh_mm_am_pm
        BRANCH_NAME="sigtax.com_$(TZ='Europe/Berlin' date '+%d_%m_%Y_%I_%M_%p')"
        echo "Branch name: $BRANCH_NAME"
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

    - name: Create Orphan Branch
      run: |
        # Initialize git repository if not already initialized
        if [ ! -d .git ]; then
          git init
        fi

        # Create and switch to the orphan branch
        git checkout --orphan "$BRANCH_NAME"
        git rm -rf . || true
        
        # Create a minimal .gitignore and force add it
        echo ".gitignore" > .gitignore
        git add -f .gitignore
        git commit -m "Initial commit on orphan branch"

    - name: Install FTP client
      run: sudo apt-get update && sudo apt-get install -y lftp

    - name: Sync with FTP server
      env:
        FTP_HOST: ${{ secrets.FTP_HOST }}
        FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
      run: |
        lftp -c "
          set ftp:ssl-force true;
          set ftp:ssl-protect-data true;
          set ssl:verify-certificate no;
          open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_HOST;
          mirror --verbose --exclude .git/ --exclude .github/ /htdocs/ray/ ./
        "

    - name: Commit and Push Changes
      run: |
        git add -A
        if [[ -n $(git status --porcelain) ]]; then
          git commit -m "Sync root with FTP server"
          if [[ -z "$BRANCH_NAME" ]]; then
            echo "Branch name is empty. Exiting with error."
            exit 1
          else
            git push origin "$BRANCH_NAME"
          fi
        else
          echo "No changes to commit."
        fi

    - name: Cleanup
      run: |
        # Remove the directory with files after committing
        rm -rf git_action_data
