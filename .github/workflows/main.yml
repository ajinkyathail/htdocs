name: Manual FTP Pull

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  ftp-pull:
    name: Pull from FTP and Commit to GitHub
    runs-on: ubuntu-latest

    steps:
    - name: Checkout dev branch
      uses: actions/checkout@v4
      with:
        ref: dev  # Ensure we are checking out the dev branch

    - name: Install FTP client
      run: sudo apt-get update && sudo apt-get install -y lftp

    - name: Generate branch name
      id: generate_branch_name
      run: |
        # Set timezone to CET
        export TZ="Europe/Zurich"

        # Generate the branch name in the desired format
        BRANCH_NAME="sigtax.com_$(date +"%d_%m_%Y_%I_%M_%p")"
        echo "Generated branch name: $BRANCH_NAME"

        # Make the branch name available to other steps
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

    - name: Sync and Commit Changes
      env:
        BRANCH_NAME: sigtax.com_27_08_2024_08_44_PM
        FTP_HOST: ${{ secrets.FTP_HOST }}
        FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
      run: |
        # Sync with FTP server (dummy example)
        echo "Starting FTP synchronization..."
        lftp -c "
          set ftp:ssl-force true;
          set ftp:ssl-protect-data true;
          set ssl:verify-certificate no;
          open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_HOST;
          mirror --verbose --exclude .git/ --exclude .github/ --exclude local_files.txt --exclude remote_files.txt /htdocs/ ./
        "

        echo "Sync complete. Preparing to commit and push changes."

        # Run git commands
        git add -A

        if [[ -n $(git status --porcelain) ]]; then
          git commit -m "Sync root with FTP server"
          
          # Check if BRANCH_NAME is empty
          if [[ -z "$BRANCH_NAME" ]]; then
            echo "Branch name is empty. Exiting with error."
            exit 1
          else
            git push origin "$BRANCH_NAME"
          fi
        else
          echo "No changes to commit."
        fi

      shell: /usr/bin/bash -e {0}